
R version 4.2.1 (2022-06-23) -- "Funny-Looking Kid"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # ifelse data manipulations.
> 
> library(microbenchmark)
> library(profmem)
> library(readr)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(data.table)

Attaching package: ‘data.table’

The following objects are masked from ‘package:dplyr’:

    between, first, last

> 
> psps_2019_path <- file.path(".", "000_data_sets", "PSPS", "psps_2019.csv")
> psps_2019_base <- read.csv(psps_2019_path)
> psps_2019_tidy <- read_csv(psps_2019_path, show_col_types = FALSE)
> psps_2019_dt   <- fread(psps_2019_path)
> 
> ################################################################################
> # Create an indicator column for place of service being a hospitial 
> #    Place of Service Code                        Place of Service Name
> #                      19               Off Campus-Outpatient Hospital
> #                      21                           Inpatient Hospital
> #                      22                On Campus-Outpatient Hospital
> 
> ################################################################################
> # First, how to find the affected rows?
> use_in <- expression({psps_2019_base$PLACE_OF_SERVICE_CD %in% c("19", "21", "22")})
> use_or <- expression({
+   psps_2019_base$PLACE_OF_SERVICE_CD == "19" |
+   psps_2019_base$PLACE_OF_SERVICE_CD == "21" | 
+   psps_2019_base$PLACE_OF_SERVICE_CD == "22"
+ })
> use_grepl_v1 <- expression({
+   grepl("^(19)|(21)|(22)", psps_2019_base$PLACE_OF_SERVICE_CD)
+ })
> use_grepl_v2 <- expression({
+   grepl("^(19)|(2[1-2])", psps_2019_base$PLACE_OF_SERVICE_CD)
+ })
> 
> identical(eval(use_in), eval(use_or))
[1] TRUE
> identical(eval(use_in), eval(use_grepl_v1))
[1] TRUE
> identical(eval(use_in), eval(use_grepl_v2))
[1] TRUE
> 
> microbenchmark(eval(use_in),
+                eval(use_or),
+                eval(use_grepl_v1),
+                eval(use_grepl_v2),
+                times = 10
+           )
Unit: milliseconds
               expr       min        lq      mean    median        uq      max
       eval(use_in)  644.6198  677.2081  746.6156  723.5144  729.2502 1127.567
       eval(use_or) 1021.6564 1060.2601 1252.9971 1171.1177 1471.4169 1723.098
 eval(use_grepl_v1) 3289.6335 3345.3484 3368.8586 3378.3999 3401.1740 3410.538
 eval(use_grepl_v2) 2985.4884 3064.2680 3092.2048 3084.2037 3128.2592 3191.251
 neval
    10
    10
    10
    10
> 
> mem <-
+   list(
+        use_in       = profmem::profmem(eval(use_in)),
+        use_or       = profmem::profmem(eval(use_or)),
+        use_grepl_v1 = profmem::profmem(eval(use_grepl_v1)),
+        use_grepl_v2 = profmem::profmem(eval(use_grepl_v2))
+        )
> 
> # total number of bytes allocated
> sapply(mem, profmem::total) |>
+   sapply(formatC, format = "d", big.mark = ",")
       use_in        use_or  use_grepl_v1  use_grepl_v2 
"283,505,784" "623,699,304" "170,099,800" "170,099,800" 
> 
> 
> ################################################################################
> base_ifelse_integer <- expression({
+   psps_2019_base$hospital_integer <- ifelse(psps_2019_base$PLACE_OF_SERVICE_CD %in% c("19", "21", "22"), 1L, 0L)
+ })
> 
> base_ifelse_string <- expression({
+   psps_2019_base$hospital_string <- ifelse(psps_2019_base$PLACE_OF_SERVICE_CD %in% c("19", "21", "22"), "Hospital", "Non-Hospital")
+ })
> 
> base_logical_coercion <- expression({
+   psps_2019_base$hospital_coercion <- as.integer(psps_2019_base$PLACE_OF_SERVICE_CD %in% c("19", "21", "22"))
+ })
> 
> base_row_replace <- expression({
+   psps_2019_base$hospital_row_replace <- "Non-Hospital"
+   psps_2019_base[psps_2019_base$PLACE_OF_SERVICE_CD %in% c("19", "21", "22"), "hospital_row_replace"] <- "Hospital"
+ })
> 
> tidy_ifelse_integer <- expression({
+   psps_2019_tidy <-
+     psps_2019_tidy %>%
+     dplyr::mutate(hospital_integer = if_else(.data$PLACE_OF_SERVICE_CD %in% c("19", "21", "22"), 1L, 0L))
+ })
> 
> tidy_ifelse_string <- expression({
+   psps_2019_tidy <-
+     psps_2019_tidy %>%
+     dplyr::mutate(hospital_string = if_else(.data$PLACE_OF_SERVICE_CD %in% c("19", "21", "22"), "Hospital", "Non-Hospital"))
+ })
> 
> tidy_logical_coercion <- expression({
+   psps_2019_tidy <-
+     psps_2019_tidy %>%
+     dplyr::mutate(hospital_coercion = as.integer(.data$PLACE_OF_SERVICE_CD %in% c("19", "21", "22")))
+ })
> 
> dt_ifelse_integer <- expression({
+   psps_2019_dt[, hospital_integer := fifelse(PLACE_OF_SERVICE_CD %in% c("19", "21", "22"), 1L, 0L)]
+ })
> dt_ifelse_string  <- expression({
+   psps_2019_dt[, hospital_string := fifelse(PLACE_OF_SERVICE_CD %in% c("19", "21", "22"), "Hospital", "Non-Hospital")]
+ })
> dt_logical_coercion  <- expression({
+   psps_2019_dt[, hospital_coercion := as.integer(PLACE_OF_SERVICE_CD %in% c("19", "21", "22"))]
+ })
> dt_row_replace <- expression({
+   psps_2019_dt[, hospital_row_replace := "Non-Hospital"]
+   psps_2019_dt[PLACE_OF_SERVICE_CD %in% c("19", "21", "22"), hospital_row_replace := "Hospital"]
+ })
> 
> 
> microbenchmark(
+   eval(base_ifelse_integer),
+   eval(base_ifelse_string),
+   eval(base_logical_coercion),
+   eval(base_row_replace),
+   eval(tidy_ifelse_integer),
+   eval(tidy_ifelse_string),
+   eval(tidy_logical_coercion),
+   eval(dt_ifelse_integer),
+   eval(dt_ifelse_string),
+   eval(dt_logical_coercion),
+   eval(dt_row_replace),
+   times = 10
+   )
Unit: milliseconds
                        expr       min        lq      mean    median        uq
   eval(base_ifelse_integer)  920.9338  947.0785 1082.2741  993.0132 1276.2148
    eval(base_ifelse_string) 2418.0816 2473.0520 2699.3797 2601.0953 2931.1903
 eval(base_logical_coercion)  622.6803  687.8243  920.8628  695.5915  877.8997
      eval(base_row_replace)  865.5442  968.8298 1284.4577 1024.2600 1402.6168
   eval(tidy_ifelse_integer)  634.1994  769.4890  869.7056  788.3618  967.8314
    eval(tidy_ifelse_string)  986.4858 1079.5143 1685.4462 1254.9107 1390.3554
 eval(tidy_logical_coercion)  293.5184  338.9207  403.7960  363.5419  435.7025
     eval(dt_ifelse_integer)  600.7653  611.2557  690.5705  669.7423  722.9508
      eval(dt_ifelse_string)  721.9746  823.7712  932.3760  846.2225  922.1571
   eval(dt_logical_coercion)  601.2679  694.3892  782.7345  701.0275  726.6645
        eval(dt_row_replace)  823.1721  868.1247  924.6815  899.1827  997.3268
       max neval
 1424.2978    10
 3094.9316    10
 2369.4614    10
 3089.2849    10
 1318.8576    10
 5079.8851    10
  629.5023    10
  871.0023    10
 1469.8242    10
 1198.1379    10
 1070.0140    10
> 
> # memory use
> mem <-
+   list(
+        base_ifelse_integer   = profmem::profmem(eval(base_ifelse_integer)),
+        base_ifelse_string    = profmem::profmem(eval(base_ifelse_string)),
+        base_logical_coercion = profmem::profmem(eval(base_logical_coercion)),
+        base_row_replace      = profmem::profmem(eval(base_row_replace)),
+        tidy_ifelse_integer   = profmem::profmem(eval(tidy_ifelse_integer)),
+        tidy_ifelse_string    = profmem::profmem(eval(tidy_ifelse_string)),
+        tidy_logical_coercion = profmem::profmem(eval(tidy_logical_coercion)),
+        dt_ifelse_integer     = profmem::profmem(eval(dt_ifelse_integer)),
+        dt_ifelse_string      = profmem::profmem(eval(dt_ifelse_string)),
+        dt_logical_coercion   = profmem::profmem(eval(dt_logical_coercion)),
+        dt_row_replace        = profmem::profmem(eval(dt_row_replace))
+        )
> 
> # total number of bytes allocated
> # format via floats to avoid integer overflow
> sapply(mem, profmem::total) |>
+   sapply(formatC, format = "f", big.mark = ",", digits = 0)
  base_ifelse_integer    base_ifelse_string base_logical_coercion 
        "793,799,592"       "1,020,599,176"         "340,199,880" 
     base_row_replace   tidy_ifelse_integer    tidy_ifelse_string 
        "662,616,096"         "907,209,056"       "1,077,308,744" 
tidy_logical_coercion     dt_ifelse_integer      dt_ifelse_string 
        "283,509,536"         "340,234,224"         "396,934,120" 
  dt_logical_coercion        dt_row_replace 
        "340,234,224"         "411,964,072" 
> 
> sessionInfo()
R version 4.2.1 (2022-06-23)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur ... 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] data.table_1.14.3    dplyr_1.0.9          readr_2.1.2         
[4] profmem_0.6.0        microbenchmark_1.4.9

loaded via a namespace (and not attached):
 [1] magrittr_2.0.3   hms_1.1.1        tidyselect_1.1.2 bit_4.0.4       
 [5] R6_2.5.1         rlang_1.0.4      fansi_1.0.3      tools_4.2.1     
 [9] parallel_4.2.1   vroom_1.5.7      utf8_1.2.2       cli_3.3.0       
[13] DBI_1.1.3        ellipsis_0.3.2   bit64_4.0.5      assertthat_0.2.1
[17] tibble_3.1.8     lifecycle_1.0.1  crayon_1.5.1     purrr_0.3.4     
[21] tzdb_0.3.0       vctrs_0.4.1      glue_1.6.2       compiler_4.2.1  
[25] pillar_1.8.0     generics_0.1.3   pkgconfig_2.0.3 
> 
> 
> proc.time()
   user  system elapsed 
338.667  34.873 334.943 
